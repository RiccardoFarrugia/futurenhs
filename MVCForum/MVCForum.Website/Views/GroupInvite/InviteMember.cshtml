@using MvcForum.Core.ExtensionMethods
@model MvcForum.Core.Repositories.Models.GroupInviteViewModel

@{
    Layout = "~/Views/Shared/_LayoutSideBar.cshtml";

    string inputError = "c-input--error";
    string formError = "c-form-group--error";
}

@section GroupHeader {
    @{ Html.RenderAction("GroupHeader", "Group", new { slug = Model.Slug }); }
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="c-grid-block c-grid-block--left">
    <div class="c-grid-block_item l-col-12 l-col-8-d">

        @if (!ViewData.ModelState.IsValid)
        {
            <div aria-labelledby="error-summary-title" class="c-error-summary u-margin-bottom-spacing-5" role="alert" tabindex="-1">
                <h2 id="error-summary-title" class="c-error-summary_title">
                    There is a problem
                </h2>
                <div class="c-error-summary_body">
                    <ul class="c-error-summary_list">

                        @Html.Raw(Html.CustomValidationSummary("c-error-summary_error-text"))

                    </ul>
                </div>
            </div>
        }

        @if (Model.Success)
        {
            <p role="alert" class="c-info-message">
                The membership invitation has been sent
            </p>
        }

        <h2>Invite new member to join this group</h2>

        <p>
            Enter the e-mail address of people you would like to invite to join this group.
        </p>

        <div class="c-form-group @Html.FieldHasError(model => model.EmailAddress, formError)">

            @Html.LabelFor(model => model.EmailAddress, "Email address", htmlAttributes: new { @class = "c-label" })

            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "c-error-message" })

            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "c-input" + " " + Html.FieldHasError(model => model.EmailAddress, inputError) } })

        </div>

        <div class="c-form-group @Html.FieldHasError(model => model.ConfirmEmailAddress, formError)">

            @Html.LabelFor(model => model.ConfirmEmailAddress, "Repeat email address", htmlAttributes: new { @class = "c-label" })

            @Html.ValidationMessageFor(model => model.ConfirmEmailAddress, "", new { @class = "c-error-message" })
            
            @Html.EditorFor(model => model.ConfirmEmailAddress, new { htmlAttributes = new { @class = "c-input" + " " + Html.FieldHasError(model => model.ConfirmEmailAddress, inputError) } })

        </div>

        @Html.HiddenFor(model => model.GroupId)

        <div class="c-form-group">
            <input type="submit" value="Send invite" class="c-button" />
        </div>
    </div>
   
</div>


}


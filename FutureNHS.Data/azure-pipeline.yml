trigger:
 branches:
    include:
    - SPRINT

jobs:
- job: CheckChangesInPaths
  displayName: 'Check commit contains changes for FutureNHS Api'
  pool:
    vmImage: 'windows-latest'
  steps: 
  - powershell: |
     $buildsUrl = "$(System.CollectionUri)/$(System.TeamProject)/_apis/build/builds?definitions=$(System.DefinitionId)&resultFilter=succeeded&queryOrder=descending&api-version=6.0-preview"
     $buildsresult = Invoke-RestMethod -Uri $buildsUrl -Headers @{Authorization = "Bearer $(System.AccessToken)"} -Method GET
     
     $buildId = $buildsresult.value[0].id
     echo "Build to check from: $buildId to: $(Build.BuildId)"
     $commitsUrl = "$(System.CollectionUri)/$(System.TeamProject)/_apis/build/changes?fromBuildId=$buildId&toBuildId=$(Build.BuildId)&api-version=6.0-preview.2"
     $commitsresult = Invoke-RestMethod -Uri $commitsUrl -Headers @{Authorization = "Bearer $(System.AccessToken)"} -Method GET
     
     foreach($commit in $commitsresult.value)
     {
       $commitId = $commit.id
      echo "Checking commit for changes: $commitId"
      $url="$(System.CollectionUri)/$(System.TeamProject)/_apis/git/repositories/$(Build.Repository.ID)/commits/$commitId/changes?api-version=5.1"
      $result = Invoke-RestMethod -Uri $url -Headers @{Authorization = "Bearer $(System.AccessToken)"} -Method GET
     
      $changesFolder  = $result.changes | Where-Object{$_.item.gitObjectType -match "tree"} | Select-Object -Property {$_.item.path}
      $matchFound=$False
      foreach($path in $changesFolder ){
        if($path -match '/FutureNHS'){
          $matchFound=$true
          echo "##vso[task.setvariable variable=FutureNHS;isOutput=true]$True"         
          break
        }       
       }
       if($matchFound)
        {
          echo "Changed detected in FutureNHS Api in commit: $commitId - Stopping..."
          break
        }
     }
    name: ChangesInPaths
- job: BuildDatabase
  displayName: 'Build and deploy artifact for database'
  pool :
    vmImage: 'windows-latest'
  dependsOn: CheckChangesInPaths
  condition: eq(dependencies.CheckChangesInPaths.outputs['ChangesInPaths.FutureNHS'], 'true') 
  steps:
  - task: VSBuild@1
    inputs:
      solution: '$(Build.SourcesDirectory)/FutureNHS.Data/FutureNHS.Data.sln'
    displayName: 'Build dacpac solution'
  - task: SqlAzureDacpacDeployment@1
    inputs:
      azureSubscription: 'CDS FNHS Dev\Test - DevOps Pipeline Service Principal'
      AuthenticationType: 'server'
      ServerName: 'sql-cdsfnhs-dev-uksouth-primary.database.windows.net'
      DatabaseName: 'MatthewM_DACPAC_Testing'
      SqlUsername: '$(DATABASEUSERNAME)'
      SqlPassword: '$(DATABASEPASSWORD)'
      deployType: 'DacpacTask'
      DeploymentAction: 'DeployReport'
      DacpacFile: '$(Build.SourcesDirectory)/FutureNHS.Data/FutureNHS.Data.FutureNHS/bin/Debug/FutureNHS.Data.FutureNHS.Dacpac'
      PublishProfile: '$(Build.SourcesDirectory)/FutureNHS.Data/FutureNHS.Data.FutureNHS/FutureNHS.Data.FutureNHS.publish.xml'
      IpDetectionMethod: 'AutoDetect'

  - task: CopyFiles@2
    displayName: 'Stage build report'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/GeneratedOutputFiles'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: SqlAzureDacpacDeployment@1
    inputs:
      azureSubscription: 'CDS FNHS Dev\Test - DevOps Pipeline Service Principal'
      AuthenticationType: 'server'
      ServerName: 'sql-cdsfnhs-dev-uksouth-primary.database.windows.net'
      DatabaseName: 'MatthewM_DACPAC_Testing'
      SqlUsername: '$(DATABASEUSERNAME)'
      SqlPassword: '$(DATABASEPASSWORD)'
      deployType: 'DacpacTask'
      DeploymentAction: 'Script'
      DacpacFile: '$(Build.SourcesDirectory)/FutureNHS.Data/FutureNHS.Data.FutureNHS/bin/Debug/FutureNHS.Data.FutureNHS.Dacpac'
      PublishProfile: '$(Build.SourcesDirectory)/FutureNHS.Data/FutureNHS.Data.FutureNHS/FutureNHS.Data.FutureNHS.publish.xml'
      IpDetectionMethod: 'AutoDetect'

  - task: CopyFiles@2
    displayName: 'Stage build script'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/GeneratedOutputFiles'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: CopyFiles@2
    displayName: 'Stage build artifacts'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/FutureNHS.Data/FutureNHS.Data.FutureNHS/bin/Debug'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishPipelineArtifact@1
    displayName: 'Publish artifact'
    inputs:
     targetPath: '$(Build.ArtifactStagingDirectory)'
     artifact: 'FNHS-Database'
     publishLocation: 'pipeline'
trigger:
  branches:
    include:
    - SPRINT
    - TRY-RI-VNEXT-APP

  paths:
    include:
    - vNext.App/*

jobs:
- job: CheckChangesInPaths
  displayName: 'Check commit contains changes for FutureNHS Api'
  pool:
    vmImage: 'windows-latest'
  steps: 
  - powershell: |
      $url="$(System.CollectionUri)/$(System.TeamProject)/_apis/git/repositories/$(Build.Repository.ID)/commits/$(Build.SourceVersion)/changes?api-version=5.1"
      $result = Invoke-RestMethod -Uri $url -Headers @{Authorization = "Bearer $(System.AccessToken)"} -Method GET
                       
      $changesFolder  = $result.changes | Where-Object{$_.item.gitObjectType -match "tree"} | Select-Object -Property {$_.item.path}
     
      foreach($path in $changesFolder ){
        if($path -match '/FutureNHS'){
          echo "##vso[task.setvariable variable=vNext.App;isOutput=true]$True"
          break
        }
      }
    name: ChangesInPaths

- job: BuildNextApp
  pool:
    vmImage: ubuntu-latest
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '14.17.4'
    
  - task: Npm@1
    displayName: 'npm install'
    inputs:
      command: 'install'
      workingDir: '$(Build.SourcesDirectory)/vNext.App'
    
  - task: gulp@0
    displayName: 'Build client'
    inputs:
      gulpFile: '$(Build.SourcesDirectory)/vNext.App/gulpfile.js'
      targets: 'build'
      gulpjs: '$(Build.SourcesDirectory)/vNext.App/node_modules/gulp/bin/gulp.js'

  - task: Npm@1
    displayName: 'Next build'
    inputs:
      command: 'custom'
      workingDir: '$(Build.SourcesDirectory)/vNext.App'
      customCommand: 'run build'

  - task: Npm@1
    displayName: 'Unit tests'
    inputs:
      command: 'custom'
      workingDir: '$(Build.SourcesDirectory)/vNext.App'
      customCommand: 'run test-js'

# - task: Npm@1
#   displayName: 'Browser tests'
#   inputs:
#     command: 'run test-automation'
#     workingDir: '$(Build.SourcesDirectory)'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/vNext.App'
      artifact: 'FNHSvNextApp'
      publishLocation: 'pipeline'

  - task: PublishTestResults@2
    displayName: 'Publish Unit Test Results'
    inputs:
      testResultsFiles: 'jest-junit.xml'
      searchFolder: '$(System.DefaultWorkingDirectory)/vNext.App/test-reports/unit'
      testRunTitle: 'Unit Test Run'
    continueOnError: true

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish Code Coverage from Unit Tests'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/vNext.App/test-reports/unit/cobertura-coverage.xml'
      failIfCoverageEmpty: true

  - task: PowerShell@2
    displayName: 'Add RUN Tag to trigger Release'
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    inputs:
      targetType: 'inline'
      script: |
        $user = ""
        $token = $env:SYSTEM_ACCESSTOKEN

        $base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(("{0}:{1}" -f $user,$token)))

        $org = "$(System.CollectionUri)"
        $teamProject = "$(System.TeamProject)"
        $buildId = "$(Build.BuildId)"
        $tagName = "RUN"

        $restApiUpdateBuild = "$org/$teamProject/_apis/build/builds/$buildId/tags/$tagName`?api-version=6.0"

        function InvokePutReques ($PutUrl)
        {   
            return Invoke-RestMethod -Uri $PutUrl -Method Put -ContentType "application/json" -Headers @{Authorization=("Basic {0}" -f $base64AuthInfo)}
        }

        $result = InvokePutReques $restApiUpdateBuild
      pwsh: true
